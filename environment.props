<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="11.0"
         xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    <!--
        Build server flags
    -->
    <PropertyGroup>
        <!--
            A flag indicating if the current build is running on a TFS build server or not.
        -->
        <IsOnAppVeyorBuildServer Condition=" '$(IsOnAppVeyorBuildServer)' == '' AND '$(APPVEYOR)' != 'True'  ">false</IsOnAppVeyorBuildServer>
        <IsOnAppVeyorBuildServer Condition=" '$(IsOnAppVeyorBuildServer)' == '' AND '$(APPVEYOR)' == 'True' ">true</IsOnAppVeyorBuildServer>

        <!--
            A flag indicating if the current build is running on the build server or not.
        -->
        <IsOnBuildServer Condition=" '$(IsOnBuildServer)' == '' ">UNDEFINED</IsOnBuildServer>
        <IsOnBuildServer Condition=" '$(IsOnBuildServer)' == 'UNDEFINED' AND ( '$(IsOnAppVeyorBuildServer)' != 'true' )">false</IsOnBuildServer>
        <IsOnBuildServer Condition=" '$(IsOnBuildServer)' == 'UNDEFINED' AND ( '$(IsOnAppVeyorBuildServer)' == 'true' )">true</IsOnBuildServer>

        <!-- Git parameters -->
        <JenkinsGitBranchExpectedHeader>origin/</JenkinsGitBranchExpectedHeader>
        <TfsGitBranchExpectedHeader>LG:refs/heads/</TfsGitBranchExpectedHeader>

        <BranchGitExpected>UNDEFINED</BranchGitExpected>
        <BranchGitExpected Condition=" '$(IsOnAppVeyorBuildServer)' == 'True' " >$(APPVEYOR_REPO_BRANCH)</BranchGitExpected>

        <GitRevNoExpected>UNDEFINED</GitRevNoExpected>
        <GitRevNoExpected Condition=" '$(IsOnAppVeyorBuildServer)' == 'True' ">$(APPVEYOR_REPO_COMMIT)</GitRevNoExpected>
    </PropertyGroup>

    <!--
        Overrides for the VCS specific properties
    -->
    <PropertyGroup>
        <!--
            A flag indicating whether or not the workspace is a GIT workspace or not. If no value is provided then
            any workspace that contains a .git folder will be assumed to be a GIT workspace.
        -->
        <IsGitWorkspace Condition=" '$(IsGitWorkspace)' == '' AND !Exists('$(DirWorkspace)\.git')">false</IsGitWorkspace>
        <IsGitWorkspace Condition=" '$(IsGitWorkspace)' == '' AND Exists('$(DirWorkspace)\.git')">true</IsGitWorkspace>

        <!--
            A flag that indicates whether or not the workspace is a TFS workspace. Defaults to false.
        -->
        <IsTfsWorkspace Condition=" '$(IsTfsWorkspace)' == '' ">false</IsTfsWorkspace>
    </PropertyGroup>

    <!--
        **** PACKAGE MANAGERS ****
    -->
    <!--
        The collection that defines all the nuget sources that are allowed to be used during the
        build. By default no sources are defined which means that the sources from the nuget.config
        will be used.
    -->
    <ItemGroup>
        <!--
        <NuGetSources Include="https://www.nuget.org/api/v2/" />
        -->
    </ItemGroup>





    <!--
        *****************************************
        *                                       *
        *     NBUILDKIT SPECIFIC SETTINGS       *
        *                                       *
        *****************************************
    -->

    <PropertyGroup>
        <!-- Defines whether the current script file has been loaded / imported or not -->
        <ExistsEnvironmentSettings>true</ExistsEnvironmentSettings>

        <!-- Fake out nBuildKit because there is a bug in the 'shared.environment.props' file which overwrites our settings -->
        <ExistsSharedEnvironmentSettings>true</ExistsSharedEnvironmentSettings>
    </PropertyGroup>
</Project>
